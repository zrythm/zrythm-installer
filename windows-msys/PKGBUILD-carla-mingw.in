# Copyright (C) 2021-2022 Alexandros Theodotou <alex at zrythm dot org>
#
# This file is part of Zrythm
#
# Zrythm is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Zrythm is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Zrythm.  If not, see <https://www.gnu.org/licenses/>.
#
# Maintainer: Alexandros Theodotou <alex at zrythm dot org>
_realname=carla
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.3.0
pkgrel=1
arch=('any')
pkgdesc='carla'
depends=("${MINGW_PACKAGE_PREFIX}-fluidsynth")
makedepends=("${MINGW_PACKAGE_PREFIX}-ccache"
             "${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-pkg-config")
options=('!strip')
license=("GPL2")
url="https://github.com/zrythm/carla"
source=("Carla-@CARLA_GIT_VER@.tar.gz")
sha256sums=('SKIP')

prepare() {
  ls
  rm -rf ${_realname}-${pkgver}
  mv "Carla-@CARLA_GIT_VER@" ${_realname}-${pkgver}
  cd ${_realname}-${pkgver}

  make msys2fix
  make features
}

build() {
  cd "${srcdir}/${_realname}-${pkgver}"

  #export CFLAGS="$CFLAGS -static-libgcc -static-libstdc++ -g -ggdb3"
  #export CXXFLAGS="$CXXFLAGS -static-libgcc -static-libstdc++ -g -ggdb3"
  export CC='ccache gcc'
  export CXX='ccache g++'
  export CFLAGS="$CFLAGS -g -mtune=haswell"
  export CXXFLAGS="$CXXFLAGS -g -mtune=haswell"
  #export LDFLAGS="$LDFLAGS $(pkg-config --libs fluidsynth)"

  declare -a common_args
  common_args+=("SHELL=$SHELL -x")
  common_args+=("HAVE_X11=false")
  # fluidsynth doesn't have static libs installed that carla needs
  common_args+=("HAVE_FLUIDSYNTH=false")
  common_args+=("HAVE_SDL=false")
  common_args+=("HAVE_SDL2=false")
  common_args+=("HAVE_HYLIA=false") # compilation breaks and ableton link is not needed anw
  common_args+=("PREFIX=${MINGW_PREFIX}")
  common_args+=("NOOPT=true")
  common_args+=("SKIP_STRIPPING=true")
  echo "${common_args[@]}"

  if [ "$MINGW_ARCH" = "mingw32" ]; then
    make "${common_args[@]}" win32r
  else
    make "${common_args[@]}"
  fi
}

package() {
  cd "${srcdir}/${_realname}-${pkgver}"

  mkdir -p "${pkgdir}/${MINGW_PREFIX}"/lib/carla
  ls -l bin
  ls -l lib
  # Find all files matching the pattern and process them
  find "lib" -type f -name 'libcarla_*' | while read -r file; do
    # Get the base name of the file
    base=$(basename "$file")

    # Replace underscore with hyphen in the filename
    new_name="${base/_/-}"

    # Copy the file to the new location with the modified name
    cp "$file" "${pkgdir}/${MINGW_PREFIX}/lib/carla/$new_name"
    cp "$file" "${pkgdir}/${MINGW_PREFIX}/lib/$new_name"
  done
  cp lib/carla/libcarla_host-plugin.dll "${pkgdir}/${MINGW_PREFIX}"/lib/carla/
  install -D -m755 bin/*.exe "${pkgdir}/${MINGW_PREFIX}"/lib/carla/

  if [ "$MINGW_ARCH" != "mingw32" ]; then
    make DESTDIR=${pkgdir} PREFIX="${MINGW_PREFIX}" install
  fi
}
